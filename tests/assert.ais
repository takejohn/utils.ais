### imports [
    '../src/assert.ais'
]

#[test]
@assert_success() {
    Assert:assert(true)
}

#[test 'should_abort']
@assert_fail() {
    Assert:assert(false)
}

#[test]
@equals_success() {
    Assert:equals(1, 1)
    Assert:equals('a', 'a')
    Assert:equals(true, true)
    Assert:equals(false, false)
    Assert:equals([1, 'a', true], [1, 'a', true])
    Assert:equals([1, [2, [3, []]]], [1, [2, [3, []]]])
    Assert:equals({ a: 1, b: 'a', c: true }, { a: 1, b: 'a', c: true })
}

#[test]
@equals_circular_arr() {
    let x = []
    x.push(x)
    let y = []
    y.push(y)
    Assert:equals(x, y)
}

#[test]
@equals_circular_obj() {
    let x = {}
    x.a = x
    let y = {}
    y.a = y
    Assert:equals(x, y)
}

#[test 'should_abort']
@equals_fail() {
    Assert:equals(1, 2)
}

#[test 'should_abort']
@equals_arr_fail() {
    Assert:equals([1], [2])
}

#[test 'should_abort']
@equals_obj_fail() {
    Assert:equals({ a: 1 }, { a: 2 })
}
